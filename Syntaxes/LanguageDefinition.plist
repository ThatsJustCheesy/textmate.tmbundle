{
    foldingStartMarker = "(/\\*|\\{|\\()"; 
    foldingStopMarker = "(\\*/|\\}|\\))"; 
    name = "Language Definition (TextMate)"; 
    patterns = (
        {   begin = "(?=<?xml)";
            end = "this_is_something_you_will_never_match"; 
            patterns = (
                { include = "text.xml"; },
            );
        }, 
        {
            captures = {
                1 = {name = "support.constant.name.tm-language-def"; }; 
                2 = {name = "string.quoted.tm-language-def"; }; 
                4 = {name = "entity.name.function.tm-language-def"; }; 
            }; 
            match = "\\b(name)\\s*=\\s*((\"|')?(.*?)\\3)\\s*;"; 
            name = "declaration.rule.tm-language-def"; 
        }, 
        {
            match = "\\b(fileTypes|keyEquivalent|foldingStartMarker|foldingStopMarker|patterns|match|begin|end|swallow|include|uuid|scopeName|captures|beginCaptures|endCaptures|firstLineMatch|comment|repository|disabled|contentName|applyEndPatternLast)\\b"; 
            name = "support.constant.tm-language-def"; 
        }, 
        {
            match = "\\b(foregroundColor|backgroundColor|fontStyle|elementForegroundColor|elementBackgroundColor|elementFontStyle|mode|highlightPairs|smartTypingPairs|increaseIndentPattern)\\b"; 
            name = "invalid.deprecated.constant.tm-language-def"; 
        }, 
        {
            match = "[-a-zA-Z_.]+(?=\\s*=)"; 
            name = "invalid.illegal.unknown-keyword.tm-language-def"; 
        }, 
        {
            begin = "'(?=.*')"; 
            end = "'"; 
            name = "string.quoted.single.tm-language-def"; 
            patterns = (
                {
                    match = "#[0-9A-Fa-f]{6}"; 
                    name = "invalid.deprecated.constant.other.color.tm-language-def"; 
                }, 
                {
                    match = "(\\\\\\\\[tvnrfaewWdDsSuUlL]([*+?])?\\??|\\^|\\$|\\||\\.([*+?])?\\??|\\\\\\\\[Az<>bB])"; 
                    name = "string.regexp.tm-language-def"; 
                }
            ); 
            swallow = "\\\\."; 
        }, 
        {
            begin = "\"(?=.*\")"; 
            end = "\""; 
            name = "string.quoted.double.tm-language-def"; 
            patterns = (
                {
                    match = "(\\\\\\\\[tvnrfaewWdDsSuUlL]([*+?])?\\??|\\^|\\$|\\||\\.([*+?])?\\??|\\\\\\\\[Az<>bB])"; 
                    name = "string.regexp.tm-language-def"; 
                }, 
                {
                    match = "#[0-9A-Fa-f]{6}"; 
                    name = "invalid.deprecated.constants.colors.tm-language-def"; 
                }
            ); 
            swallow = "\\\\."; 
        }, 
        {include = "source.plist"; }
    ); 
    scopeName = "source.plist.language-definition"; 
    uuid = "101D6FC2-6CBD-11D9-B329-000D93347A42"; 
}
